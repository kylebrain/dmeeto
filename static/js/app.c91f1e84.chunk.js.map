{"version":3,"sources":["consts.tsx","components/Danny.tsx","components/Matches.tsx","components/Username.tsx","App.tsx"],"names":["endpointUrl","Danny","userId","useState","isLoaded","setIsLoaded","error","setError","danny","setDanny","fetchNewDanny","fetch","then","res","json","result","console","log","postNewMatch","profileId","match","postOptions","method","body","JSON","stringify","useEffect","Text","style","textAlign","width","height","undefined","message","fontWeight","name","description","Image","resizeMode","source","uri","imageUrl","View","flex","alignItems","justifyContent","flexDirection","Button","disabled","title","onPress","Matches","matches","setMatches","getMatches","galleryBody","FlatList","numColumns","paddingHorizontal","data","renderItem","item","margin","marginTop","keyExtractor","fontSize","paddingVertical","Username","setUserId","initialUsername","value","setValue","username","setUserName","TextInput","borderColor","borderWidth","onChangeText","text","App","viewGallery","setViewGallery","backgroundColor","color","styles","container","marginVertical","StyleSheet","create","marginHorizontal"],"mappings":"wLAAaA,EAAc,8D,QCSdC,EAA8B,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,OAAyB,EACpCC,oBAAS,GAD2B,WAC7DC,EAD6D,KACnDC,EADmD,OAE1CF,mBAAS,MAFiC,WAE7DG,EAF6D,KAEtDC,EAFsD,OAG1CJ,mBAAS,CAAE,KAAQ,GAAI,UAAa,KAAM,SAAY,GAAI,YAAe,GAAI,QAAW,KAH9C,WAG7DK,EAH6D,KAGtDC,EAHsD,KAK9DC,EAAgB,SAACR,GACrBG,GAAY,GACZM,MAAMX,EAAc,WAAaE,GAC9BU,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACCV,GAAY,GACZW,QAAQC,IAAIF,GACZN,EAASM,MAEX,SAACT,GACCD,GAAY,GACZE,EAASD,OAKXY,EAAe,SAAChB,EAAgBiB,EAAmBC,GACvDf,GAAY,GAEZ,IAAMgB,EAAc,CAClBC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnB,OAAUvB,EACV,UAAaiB,EACb,MAASC,KAKbT,MAAMX,EAAaqB,GAChBT,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACCC,QAAQC,IAAIF,GACZL,EAAcR,MAEhB,SAACI,GACCD,GAAY,GACZW,QAAQC,IAAIX,GACZC,EAASD,OAKjBoB,qBAAU,WACK,IAAVxB,EAEDQ,EAAcR,GAEdG,GAAY,KAEb,CAACH,IAEJ,IAAIqB,EAAO,kBAACI,EAAA,EAAD,CAAMC,MAAO,CAAEC,UAAW,SAAUC,MAAO,MAAOC,OAAQ,UAA1D,yBAgBX,OAfI3B,IAEAmB,EADEjB,EACK,kBAACqB,EAAA,EAAD,KAAO,UAAYrB,QACA0B,GAAjBxB,EAAMyB,QACR,kBAACN,EAAA,EAAD,CAAMC,MAAO,CAAEC,UAAW,SAAUC,MAAO,MAAOC,OAAQ,QAASG,WAAY,SAA/E,6BAGL,oCACE,kBAACP,EAAA,EAAD,CAAMC,MAAO,CAAEM,WAAY,OAAQL,UAAW,WAAarB,EAAM2B,MACjE,kBAACR,EAAA,EAAD,CAAMC,MAAO,CAAEC,UAAW,WAAarB,EAAM4B,aAC7C,kBAACC,EAAA,EAAD,CAAOT,MAAO,CAAEU,WAAY,UAAWR,MAAO,IAAKC,OAAQ,KAAOQ,OAAQ,CAAEC,IAAKhC,EAAMiC,cAM7F,kBAACC,EAAA,EAAD,CAAMd,MAAO,CAAEE,MAAO,OAAQa,KAAM,EAAGC,WAAY,WACjD,kBAACF,EAAA,EAAD,CAAMd,MAAO,CAAEe,KAAM,GAAIE,eAAgB,SAAUD,WAAY,WAAarB,GAC5E,kBAACmB,EAAA,EAAD,CAAMd,MAAO,CAAEe,KAAM,EAAGb,MAAO,MAAOgB,cAAe,MAAOD,eAAgB,kBAC1E,kBAACE,EAAA,EAAD,CAAQC,UAAW5C,QAA6B4B,GAAjBxB,EAAMyB,QAAsBgB,MAAM,MAAMC,QAAS,kBAAMhC,EAAahB,EAAQM,EAAMW,WAAW,MAC5H,kBAAC4B,EAAA,EAAD,CAAQC,UAAW5C,QAA6B4B,GAAjBxB,EAAMyB,QAAsBgB,MAAM,KAAKC,QAAS,kBAAMhC,EAAahB,EAAQM,EAAMW,WAAW,S,QChFtHgC,EAAkC,SAAC,GAA6B,IAA5BjD,EAA2B,EAA3BA,OAA2B,EAQ5CC,mBAAkB,IAR0B,WAQnEiD,EARmE,KAQ1DC,EAR0D,OAS1ClD,oBAAS,GATiC,WASnEC,EATmE,KASzDC,EATyD,OAUhDF,mBAAS,MAVuC,WAUnEG,EAVmE,KAU5DC,EAV4D,KAY1EmB,qBAAU,WACK,IAAVxB,GAEDoD,EAAWpD,KAEZ,CAACA,IAEJ,IAAMoD,EAAa,SAACpD,GAClBG,GAAY,GACZM,MAAMX,EAAc,eAAiBE,GAClCU,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACCV,GAAY,GAEZgD,EAAWtC,MAEb,SAACT,GACCD,GAAY,GACZW,QAAQC,IAAIX,GACZC,EAASD,OAYbiD,EAAc,kBAAC5B,EAAA,EAAD,2BASlB,OARIvB,IAEAmD,EADEjD,EACY,kBAACqB,EAAA,EAAD,KAAOrB,GAEP,kBAACkD,EAAA,EAAD,CAAUC,WAAY,EAAG7B,MAAO,CAACe,KAAM,EAAGe,kBAAmB,GAAI3B,OAAQ,KAAM4B,KAAMP,EAASQ,WAZ5F,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KACrB,OAAO,kBAACnB,EAAA,EAAD,CAAMd,MAAO,CAAEe,KAAM,EAAGmB,OAAQ,GAAIhC,MAAO,OAAQc,WAAY,WACpE,kBAACjB,EAAA,EAAD,CAAMC,MAAO,CAACM,WAAY,OAAQL,UAAW,SAAUkC,UAAW,IAAMF,EAAK1B,MAC7E,kBAACE,EAAA,EAAD,CAAOT,MAAO,CAAEU,WAAY,UAAWR,MAAO,IAAKC,OAAQ,IAAKgC,UAAW,GAAKxB,OAAQ,CAAEC,IAAKqB,EAAKpB,cASiCuB,aAAc,SAAC5C,GAAD,OAAWA,EAAMD,cAIjK,kBAACuB,EAAA,EAAD,CAAMd,MAAO,CAAEE,MAAO,OAAQa,KAAM,GAAIC,WAAY,WACzD,kBAACjB,EAAA,EAAD,CAAMC,MAAO,CAAEM,WAAY,OAAQL,UAAW,SAAUoC,SAAU,GAAIC,gBAAiB,KAAvF,cACA,kBAACxB,EAAA,EAAD,CAAMd,MAAO,CAACe,KAAM,EAAGuB,gBAAiB,KACrCX,K,QCxDMY,EAAoC,SAAC,GAAkD,IAAjDC,EAAgD,EAAhDA,UAAWC,EAAqC,EAArCA,gBAAqC,EACvElE,mBAAS,IAD8D,WAC1FmE,EAD0F,KACnFC,EADmF,OAEjEpE,mBAASkE,GAFwD,WAE1FG,EAF0F,KAEhFC,EAFgF,KAIjG/C,qBAAU,WAER0C,EAAUI,KACT,CAACA,IAEJ,IAAIjD,EACF,kBAACmB,EAAA,EAAD,CAAMd,MAAO,CAAEe,KAAM,IACnB,kBAAChB,EAAA,EAAD,uBACA,kBAACe,EAAA,EAAD,CAAMd,MAAO,CAAEe,KAAM,EAAGG,cAAe,QACrC,kBAAC4B,EAAA,EAAD,CAAW9C,MAAO,CAAE+C,YAAa,OAAQC,YAAa,EAAGlB,kBAAmB,GAC1EmB,aAAc,SAAAC,GAAI,OAAIP,EAASO,IAC/BR,MAAOA,IACT,kBAACvB,EAAA,EAAD,CAAQC,SAAmB,IAATsB,EAAarB,MAAM,SAASC,QAAS,kBAAMuB,EAAYH,QAY/E,MARgB,IAAZE,IACFjD,EACE,kBAACmB,EAAA,EAAD,CAAMd,MAAO,CAAEe,KAAM,EAAGE,eAAgB,WACtC,kBAAClB,EAAA,EAAD,CAAMC,MAAO,CAAEC,UAAW,SAAUK,WAAW,SAA/C,WAAkEsC,GAClE,kBAACzB,EAAA,EAAD,CAAQE,MAAM,SAASC,QAAS,WAAQuB,EAAY,IAAKF,EAAS,SAKtE,kBAAC7B,EAAA,EAAD,CAAMd,MAAO,CAAEe,KAAM,IACnB,kBAACD,EAAA,EAAD,CAAMd,MAAO,CAAEe,KAAM,KACrB,kBAACD,EAAA,EAAD,CAAMd,MAAO,CAAEe,KAAM,IAClBpB,GAEH,kBAACmB,EAAA,EAAD,CAAMd,MAAO,CAAEe,KAAM,OCrCZ,SAASoC,IAAO,IAAD,EAGU5E,oBAAS,GAHnB,WAGrB6E,EAHqB,KAGRC,EAHQ,OAIA9E,mBAAS,IAJT,WAIrBD,EAJqB,KAIbkE,EAJa,KAM5B,OACE,kBAAC1B,EAAA,EAAD,CAAMd,MAAO,CAACe,KAAO,IACnB,kBAACD,EAAA,EAAD,CAAMd,MAAO,CAACe,KAAM,GAAKuC,gBAAiB,YACxC,kBAACvD,EAAA,EAAD,CAAMC,MAAO,CAACE,MAAO,OAAQD,UAAU,SAAUqC,gBAAiB,GAAID,SAAS,GAAIkB,MAAM,OAAQjD,WAAW,QAA5G,WAEF,kBAACQ,EAAA,EAAD,CAAMd,MAAOwD,EAAOC,WAClB,kBAAC3C,EAAA,EAAD,CAAMd,MAAO,CAAEe,KAAM,OACjBqC,GAAe,kBAAC,EAAD,CAAUX,gBAAiBnE,EAAQkE,UAAW,SAAClE,GAAqBkE,EAAUlE,OAEhG8E,EAAc,kBAAC,EAAD,CAAS9E,OAAQA,IAAa,kBAAC,EAAD,CAAOA,OAAQA,IAC5D,kBAACwC,EAAA,EAAD,CAAMd,MAAO,CAAE0D,eAAgB,GAAI3C,KAAM,EAAGE,eAAgB,WAC1D,kBAACE,EAAA,EAAD,CAAQE,MAAO+B,EAAc,OAAS,aAAc9B,QAAS,kBAAM+B,GAAgBD,SAQ7F,IAAMI,EAASG,IAAWC,OAAO,CAC/BH,UAAW,CACT1C,KAAM,EACNuC,gBAAiB,OACjBtC,WAAY,SACZC,eAAgB,SAChB4C,iBAAkB,O","file":"static/js/app.c91f1e84.chunk.js","sourcesContent":["export const endpointUrl = \"https://4jhvf2usw2.execute-api.us-west-1.amazonaws.com/test\";","import React, { useEffect, useState } from 'react';\r\nimport { endpointUrl } from '../consts';\r\nimport { Text, View, Image, Button } from 'react-native';\r\n\r\ninterface DannyProps\r\n{\r\n  userId : string\r\n}\r\n\r\nexport const Danny: React.FC<DannyProps> = ({userId} : DannyProps) => {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [danny, setDanny] = useState({ \"name\": \"\", \"profileId\": \"-1\", \"imageUrl\": \"\", \"description\": \"\", \"message\": \"\" });\r\n\r\n  const fetchNewDanny = (userId: string) => {\r\n    setIsLoaded(false);\r\n    fetch(endpointUrl + \"?userId=\" + userId)\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          setIsLoaded(true);\r\n          console.log(result);\r\n          setDanny(result);\r\n        },\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n        }\r\n      )\r\n  }\r\n\r\n  const postNewMatch = (userId: string, profileId: string, match: boolean) => {\r\n    setIsLoaded(false);\r\n\r\n    const postOptions = {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        \"userId\": userId,\r\n        \"profileId\": profileId,\r\n        \"match\": match\r\n      })\r\n\r\n    }\r\n\r\n    fetch(endpointUrl, postOptions)\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          fetchNewDanny(userId);\r\n        },\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          console.log(error);\r\n          setError(error);\r\n        }\r\n      )\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(userId != \"\")\r\n    {\r\n      fetchNewDanny(userId);\r\n    } else{\r\n      setIsLoaded(false);\r\n    }\r\n  }, [userId]);\r\n\r\n  let body = <Text style={{ textAlign: \"center\", width: \"80%\", height: \"118px\" }}>Finding next match...</Text>;\r\n  if (isLoaded) {\r\n    if (error) {\r\n      body = <Text>{\"Error: \" + error}</Text>;\r\n    } else if (danny.message != undefined) {\r\n      body = <Text style={{ textAlign: \"center\", width: \"80%\", height: \"118px\", fontWeight: \"bold\" }}>I hope you found the one!</Text>;\r\n    } else {\r\n      body =\r\n        <>\r\n          <Text style={{ fontWeight: \"bold\", textAlign: \"center\" }}>{danny.name}</Text>\r\n          <Text style={{ textAlign: \"center\" }}>{danny.description}</Text>\r\n          <Image style={{ resizeMode: \"stretch\", width: 250, height: 250 }} source={{ uri: danny.imageUrl }} />\r\n        </>;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={{ width: \"100%\", flex: 6, alignItems: \"center\" }}>\r\n      <View style={{ flex: 12, justifyContent: \"center\", alignItems: \"center\" }}>{body}</View>\r\n      <View style={{ flex: 1, width: \"50%\", flexDirection: 'row', justifyContent: 'space-between' }}>\r\n        <Button disabled={!isLoaded || danny.message != undefined} title=\"YES\" onPress={() => postNewMatch(userId, danny.profileId, true)} />\r\n        <Button disabled={!isLoaded || danny.message != undefined} title=\"NO\" onPress={() => postNewMatch(userId, danny.profileId, false)} />\r\n      </View>\r\n    </View>\r\n  )\r\n\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { endpointUrl } from '../consts';\r\nimport { Text, View, Image, FlatList } from 'react-native';\r\n\r\ninterface MatchesProps\r\n{\r\n  userId : string\r\n}\r\n\r\nexport const Matches: React.FC<MatchesProps> = ({userId} : MatchesProps) => {\r\n  interface Match {\r\n    imageUrl: string,\r\n    description: string,\r\n    name: string,\r\n    profileId: string\r\n  }\r\n\r\n  const [matches, setMatches] = useState<Match[]>([]);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if(userId != \"\")\r\n    {\r\n      getMatches(userId);\r\n    }\r\n  }, [userId])\r\n\r\n  const getMatches = (userId: string) => {\r\n    setIsLoaded(false);\r\n    fetch(endpointUrl + \"/all?userId=\" + userId)\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          setIsLoaded(true);\r\n          //console.log(result);\r\n          setMatches(result);\r\n        },\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          console.log(error);\r\n          setError(error);\r\n        }\r\n      )\r\n  }\r\n\r\n  const renderMatch = ({ item }: { item: Match }) => {\r\n    return <View style={{ flex: 1, margin: 12, width: \"100%\", alignItems: \"center\" }}>\r\n      <Text style={{fontWeight: \"bold\", textAlign: \"center\", marginTop: 6 }}>{item.name}</Text>\r\n      <Image style={{ resizeMode: \"stretch\", width: 150, height: 150, marginTop: 6 }} source={{ uri: item.imageUrl }}></Image>\r\n    </View>\r\n  }\r\n\r\n  let galleryBody = <Text>Loading matches...</Text>\r\n  if (isLoaded) {\r\n    if (error) {\r\n      galleryBody = <Text>{error}</Text>\r\n    } else {\r\n      galleryBody = <FlatList numColumns={2} style={{flex: 1, paddingHorizontal: 12, height: 600}} data={matches} renderItem={renderMatch} keyExtractor={(match) => match.profileId} />\r\n    }\r\n  }\r\n\r\n  return <View style={{ width: \"110%\", flex: 12, alignItems: \"center\" }}>\r\n    <Text style={{ fontWeight: \"bold\", textAlign: \"center\", fontSize: 20, paddingVertical: 12 }}>My Matches</Text>\r\n    <View style={{flex: 1, paddingVertical: 12}}>\r\n      {galleryBody}\r\n    </View>\r\n  </View>;\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Text, View, Button, TextInput } from 'react-native';\r\n\r\ninterface UsernameProps\r\n{\r\n  setUserId : (userId: string) => void,\r\n  initialUsername: string\r\n}\r\n\r\nexport const Username: React.FC<UsernameProps> = ({setUserId, initialUsername} : UsernameProps) => {\r\n  const [value, setValue] = useState(\"\");\r\n  const [username, setUserName] = useState(initialUsername);\r\n\r\n  useEffect(() =>\r\n  {\r\n    setUserId(username);\r\n  }, [username])\r\n\r\n  let body =\r\n    <View style={{ flex: 1 }}>\r\n      <Text>Enter username</Text>\r\n      <View style={{ flex: 1, flexDirection: \"row\" }}>\r\n        <TextInput style={{ borderColor: 'gray', borderWidth: 1, paddingHorizontal: 6 }}\r\n          onChangeText={text => setValue(text)}\r\n          value={value} />\r\n        <Button disabled={value == \"\"} title=\"SUBMIT\" onPress={() => setUserName(value)} />\r\n      </View>\r\n    </View>\r\n\r\n  if (username != \"\") {\r\n    body =\r\n      <View style={{ flex: 3, justifyContent: \"center\" }}>\r\n        <Text style={{ textAlign: \"center\", fontWeight:\"bold\" }}>Welcome {username}</Text>\r\n        <Button title=\"LOGOUT\" onPress={() => { setUserName(\"\"); setValue(\"\") }}></Button>\r\n      </View>\r\n  }\r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <View style={{ flex: 1 }} />\r\n      <View style={{ flex: 2 }}>\r\n        {body}\r\n      </View>\r\n      <View style={{ flex: 3 }} />\r\n    </View>\r\n\r\n\r\n  );\r\n}","import React, { useEffect, useState } from 'react';\nimport { StyleSheet, Text, View, Image, Button, FlatList, TextInput } from 'react-native';\nimport { Danny } from './components/Danny';\nimport { Matches } from './components/Matches';\nimport { Username } from './components/Username';\n\nexport default function App() {\n\n\n  const [viewGallery, setViewGallery] = useState(false);\n  const [userId, setUserId] = useState(\"\");\n\n  return (\n    <View style={{flex : 1}}>\n      <View style={{flex: 0.1, backgroundColor: \"#2196F3\"}}>\n        <Text style={{width: \"100%\", textAlign:\"center\", paddingVertical: 15, fontSize:30, color:\"#fff\", fontWeight:\"600\"}}>dMEETo</Text>\n      </View>\n      <View style={styles.container}>\n        <View style={{ flex: 2.3 }}>\n          {!viewGallery && <Username initialUsername={userId} setUserId={(userId: string) => { setUserId(userId) }} />}\n        </View>\n        {viewGallery ? <Matches userId={userId} /> : <Danny userId={userId} />}\n        <View style={{ marginVertical: 12, flex: 2, justifyContent: \"center\" }}>\n          <Button title={viewGallery ? \"Back\" : \"My Matches\"} onPress={() => setViewGallery(!viewGallery)} />\n        </View>\n      </View>\n    </View>\n\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginHorizontal: 16,\n  },\n});\n"],"sourceRoot":""}